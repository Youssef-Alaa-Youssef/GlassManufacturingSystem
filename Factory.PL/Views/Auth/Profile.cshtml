@model Factory.PL.ViewModels.Auth.ApplicationUserViewModel

@{
    ViewData["Title"] = "User Profile";
    Layout = "_LogedUser";
}

<!-- Main Container -->
<div class="container-fluid p-0">
    <div class="row justify-content-center m-0">
        <div class="col-12 p-0 mx-2">
            <!-- Card Component -->
            <div class="card border-0 shadow-sm rounded-0">
                <div class="card-body p-3">
                    <!-- Profile Header -->
                    <div class="text-center mb-3">
                        <div class="avatar-container mb-2">
                            <span class="avatar display-4 text-primary">
                                <i class="bi bi-person-circle"></i>
                            </span>
                        </div>
                        <h2 class="fw-bold text-dark mb-1">@Model.UserName</h2>
                        <p class="text-muted fs-6">View and manage your profile details below.</p>
                    </div>

                    <!-- Profile Content -->
                    <div class="row">
                        <!-- User Information -->
                        <div class="col-md-8 mx-auto">
                            <div class="mb-3">
                                <h4 class="text-dark mb-2 fw-bold">
                                    <i class="bi bi-info-circle me-1"></i> User Information
                                </h4>
                                <div class="mb-2">
                                    <label class="form-label fw-bold">Full Name</label>
                                    <input type="text" class="form-control form-control-sm" value="@Model.UserName" readonly>
                                </div>
                                <div class="mb-2">
                                    <label class="form-label fw-bold">Email Address</label>
                                    <input type="text" class="form-control form-control-sm" value="@Model.Email" readonly>
                                </div>
                                <div class="mb-2">
                                    <label class="form-label fw-bold">Phone Number</label>
                                    <input type="text" class="form-control form-control-sm" value="@Model.PhoneNumber" readonly>
                                </div>

                                <!-- Roles Section -->
                                <div class="mb-3">
                                    <h4 class="text-dark mb-2 fw-bold">
                                        <i class="bi bi-shield-check me-1"></i> Roles
                                    </h4>
                                    <div class="d-flex flex-wrap gap-2">
                                        @foreach (var role in Model.Roles)
                                        {
                                            <span class="badge bg-primary text-light fs-6 p-2">
                                                <i class="bi bi-shield me-1"></i> @role
                                            </span>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Action Buttons -->
                    <div class="text-center mt-3">
                        <a asp-action="EditProfile" class="btn btn-primary btn-sm me-2">
                            <i class="bi bi-pencil me-1"></i> Edit Profile
                        </a>
                        <a asp-action="Auth" class="btn btn-outline-primary btn-sm">
                            <i class="bi bi-shield-lock me-1"></i> Two-Factor Authentication
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Optional CSS Styles -->
<style>
    /* Custom Styles */
    .avatar-container {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .avatar {
        background-color: #e9ecef;
        border-radius: 50%;
        padding: 1rem;
        display: inline-flex;
        justify-content: center;
        align-items: center;
        width: 80px;
        height: 80px;
    }

    .form-control-sm {
        font-size: 0.9rem;
        padding: 0.5rem;
    }

    .badge {
        font-size: 0.9rem;
        padding: 0.5rem 1rem;
        border-radius: 0.5rem;
        display: inline-flex;
        align-items: center;
        transition: background-color 0.3s ease, transform 0.3s ease;
    }

        .badge:hover {
            background-color: #0056b3;
            transform: translateY(-2px);
        }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
        transition: background-color 0.3s ease, transform 0.3s ease;
    }

        .btn-primary:hover {
            background-color: #0056b3;
            transform: translateY(-2px);
        }

    .btn-outline-primary {
        color: #007bff;
        border-color: #007bff;
        transition: background-color 0.3s ease, color 0.3s ease, transform 0.3s ease;
    }

        .btn-outline-primary:hover {
            background-color: #007bff;
            color: #fff;
            transform: translateY(-2px);
        }

    .text-muted {
        color: #6c757d;
    }

    .form-control[readonly] {
        background-color: #f8f9fa;
        cursor: not-allowed;
    }
</style>

<!-- JavaScript to handle modal functionality -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var rolePermissionsModal = document.getElementById('rolePermissionsModal');
        var rolePermissionsTitle = document.getElementById('rolePermissionsTitle');
        var rolePermissionsList = document.getElementById('rolePermissionsList');

        rolePermissionsModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget; // Button that triggered the modal
            var role = button.getAttribute('data-role'); // Extract info from data-* attributes

            var permissions = getPermissionsForRole(role);

            rolePermissionsTitle.textContent = role + ' Permissions';
            rolePermissionsList.innerHTML = permissions.map(function (perm) {
                return `<li><i class="bi bi-check-circle me-2 text-success"></i> ${perm}</li>`;
            }).join('');
        });

        function getPermissionsForRole(role) {
            var permissionsMap = {
                'Admin': ['Manage Users', 'View Reports', 'Edit Settings'],
                'User': ['View Profile', 'Edit Profile'],
                'Moderator': ['Manage Content', 'View Analytics']
            };
            return permissionsMap[role] || [];
        }
    });
</script>