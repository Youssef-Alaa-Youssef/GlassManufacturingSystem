@model Factory.PL.ViewModels.Permissions.PermissionManagementViewModel

@{
    ViewData["Title"] = "Assign Permissions";
    Layout = "_LogedUser";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />

<style>
    .card-header {
        background: linear-gradient(180deg, #2c3e50 0%, #34495e 100%);
    }
 
</style>

<div class="container mt-4 shadow-lg p-3 rounded">
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">
            @TempData["Success"]
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">
            @TempData["Error"]
        </div>
    }

    <h2 class="text-center mb-4  text-white py-3 px-4 rounded" style="background: linear-gradient(180deg, #2c3e50 0%, #34495e 100%);color:white">
        <i class="bi bi-plus-circle me-2"></i> @ViewData["Title"]
    </h2>

    <form asp-action="AssignPermissions" method="post">
        <div class="row">
            <div class="col-md-12">
                <h4>Assign Permissions</h4>

                @foreach (var module in Model.RolePermissions
                .SelectMany(rp => rp.Permissions)
                .SelectMany(p => p.Modules)
                .GroupBy(m => m.ModuleId)
                .Select(g => g.First()))
                {
                    <div class="card mb-4">
                        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">
                                <button type="button" class="btn btn-link text-white text-decoration-none" data-bs-toggle="collapse" data-bs-target="#module-@module.ModuleId" aria-expanded="false" aria-controls="module-@module.ModuleId">
                                    <i class="bi bi-chevron-down"></i> Module: @module.ModuleName
                                </button>
                            </h5>
                            <div class="select-all-roles">
                                @foreach (var rolePermission in Model.RolePermissions)
                                {
                                    <div class="form-check form-check-inline">
                                        <input type="checkbox" class="form-check-input select-all-role" data-module-id="@module.ModuleId" data-role-id="@rolePermission.RoleId" />
                                        <label class="form-check-label text-white">Select All (@rolePermission.RoleName)</label>
                                    </div>
                                }
                            </div>
                        </div>
                        <div id="module-@module.ModuleId" class="collapse">
                            <!-- Collapsed by default -->
                            <div class="card-body">
                                <table class="table table-bordered table-striped ">
                                    <thead>
                                        <tr>
                                            <th>Permission</th>
                                            <th>Assign</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var permission in Model.RolePermissions
                                       .SelectMany(rp => rp.Permissions)
                                       .Where(p => p.Modules.Any(m => m.ModuleId == module.ModuleId))
                                       .GroupBy(p => p.PermissionId)
                                       .Select(g => g.First()))
                                        {
                                            <tr>
                                                <td>@permission.PermissionName</td>
                                                
                                                <td>
                                                    @foreach (var rolePermission in Model.RolePermissions
                                                   .Where(rp => rp.Permissions.Any(p => p.PermissionId == permission.PermissionId && p.Modules.Any(m => m.ModuleId == module.ModuleId))))
                                                    {
                                                        var rolePermissionIndex = Model.RolePermissions.IndexOf(rolePermission);
                                                        var permissionIndex = rolePermission.Permissions.FindIndex(p => p.PermissionId == permission.PermissionId);
                                                        var moduleIndex = rolePermission.Permissions[permissionIndex].Modules.FindIndex(m => m.ModuleId == module.ModuleId);

                                                        <input type="hidden" asp-for="@Model.RolePermissions[rolePermissionIndex].RoleId" />
                                                        <input type="hidden" asp-for="@Model.RolePermissions[rolePermissionIndex].RoleName" />

                                                        <input type="hidden" asp-for="@Model.RolePermissions[rolePermissionIndex].Permissions[permissionIndex].PermissionId" />
                                                        <input type="hidden" asp-for="@Model.RolePermissions[rolePermissionIndex].Permissions[permissionIndex].PermissionName" />
                                                        <input type="hidden" asp-for="@Model.RolePermissions[rolePermissionIndex].Permissions[permissionIndex].Modules[moduleIndex].ModuleId" />
                                                        <input type="hidden" asp-for="@Model.RolePermissions[rolePermissionIndex].Permissions[permissionIndex].Modules[moduleIndex].ModuleName" />

                                                        <input type="checkbox" asp-for="@Model.RolePermissions[rolePermissionIndex].Permissions[permissionIndex].Modules[moduleIndex].IsSelected" class="form-check-input permission-checkbox" data-module-id="@module.ModuleId" data-role-id="@rolePermission.RoleId" />
                                                        <span class="ms-2">@rolePermission.RoleName</span>

                                                        <br />
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="row mt-4">
            <div class="col-md-12 d-flex justify-content-center">
                <button type="submit" class="btn btn-outline-primary btn-lg me-2">
                    <i class="bi bi-save me-2"></i> Save Permissions
                </button>
                <a asp-action="Index" class="btn btn-outline-secondary btn-lg">
                    <i class="bi bi-arrow-left me-2"></i> Back to List
                </a>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        // Select All for Roles within a Module
        document.querySelectorAll('.select-all-role').forEach(selectAllCheckbox => {
            selectAllCheckbox.addEventListener('change', function () {
                const moduleId = this.getAttribute('data-module-id');
                const roleId = this.getAttribute('data-role-id');
                const permissionCheckboxes = document.querySelectorAll(`.permission-checkbox[data-module-id="${moduleId}"][data-role-id="${roleId}"]`);

                permissionCheckboxes.forEach(checkbox => {
                    checkbox.checked = this.checked;
                });
            });
        });

        // Collapse/Expand Module Sections
        document.querySelectorAll('.btn-link').forEach(button => {
            button.addEventListener('click', () => {
                const icon = button.querySelector('i');
                if (icon.classList.contains('bi-chevron-down')) {
                    icon.classList.remove('bi-chevron-down');
                    icon.classList.add('bi-chevron-up');
                } else {
                    icon.classList.remove('bi-chevron-up');
                    icon.classList.add('bi-chevron-down');
                }
            });
        });
    </script>
}